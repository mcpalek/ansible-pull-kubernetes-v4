- name: Remove podman from RedHat/CentOs/Rocky
  yum:
    name: podman.x86_64
    state: absent
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]

- name: remove buildah from RedHat/CentOs/Rocky
  yum:
    name: buildah.x86_64
    state: absent
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Uninstall old Docker versions from RedHat/CentOs/Rocky
  yum:
    name:
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-engine
    state: absent
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Install yum utils
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
  - yum-utils
  - device-mapper-persistent-data
  - lvm2

- name: Set up docker repository for RedHat/CentOs/Rocky
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
    # become: yes
    #  shell: >
    #    yum install -y yum-utils #magic___^_^___line yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Install the latest version of Docker Engine and containerd on RedHat/CentOs/Rocky
  package:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    state: present
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Start and enable docker on RedHat/CentOs/Rocky
  systemd:
    name: docker
    state: started
    enabled: yes
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Disable SELinux on RedHat/CentOs/Rocky
  selinux:
    state: disabled
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Add kubernetes Repo to RedHat/CentOs/Rocky
  yum_repository:
    name: kubernetes
    description: Kubernetes
    enabled: true
    gpgcheck: true
    baseurl: https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/
    gpgkey: https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/repodata/repomd.xml.key
    exclude: kubelet kubeadm kubectl cri-tools kubernetes-cni
  #shell: >
  # cat <<EOF > /etc/yum.repos.d/kubernetes.repo #magic___^_^___line [kubernetes] #magic___^_^___line name=Kubernetes #magic___^_^___line baseurl=https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/ #magic___^_^___line enabled=1 #magic___^_^___line gpgcheck=1 #magic___^_^___line gpgkey=https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/repodata/repomd.xml.key #magic___^_^___line exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]

- name: Install Kubernetes Package on RedHat/CentOs/Rocky
  shell: >
    yum install -y kubelet-{{ rocky_kubernetes_version }} kubeadm-{{ rocky_kubernetes_version }} kubectl-{{ rocky_kubernetes_version }} --disableexcludes=kubernetes
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
- name: Ensure containerd is installed.
  package:
    name: containerd.io
    state: present
- name: Ensure containerd is started and enabled at boot.
  service:
    name: containerd
    state: started
    enabled: true

- name: Ensure containerd config directory exists.
  file:
    path: /etc/containerd
    state: directory
  register: containerd_dir

- name: Get defaults from containerd.
  command: containerd config default
  changed_when: false
  register: containerd_config_default


- name: Prepare containerd/config.toml from default config
  copy:
    dest: /tmp/containerd_config.toml
    content: "{{ containerd_config_default.stdout }}"


- name: Set Cgroup driver to systemd
  lineinfile:
    insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
    line: '          SystemdCgroup = true'
    state: present
    path: /tmp/containerd_config.toml
- name: restart containerd
  service:
    name: containerd
    state: restarted
- name: Copy config.toml to /etc/containerd
  copy:
    remote_src: true
    src: /tmp/containerd_config.toml
    dest: /etc/containerd/config.toml
  notify: restart containerd

- name: Cleanup temporary file
  file:
    path: /tmp/containerd_config.toml
    state: absent
  changed_when: false

- name: Ensure containerd is restarted immediately if necessary.
  meta: flush_handlers

- name: Check if firewalld package is installed (on RHEL).
  command: yum list installed firewalld
  register: firewalld_installed
  ignore_errors: true
  changed_when: false
  when:
  - ansible_distribution in ["Rocky", "CentOS" ,"RedHat"]
  # - firewall_disable_firewalld
  check_mode: false
- name: DisaBle Firewall on RedHat/CentOs/Rocky
  service:
    name: firewalld
    state: stopped
    enabled: false
  when:
  - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]



